{
  "version": 3,
  "sources": ["../../simplelightbox/dist/simple-lightbox.esm.js"],
  "sourcesContent": ["/*!\r\n\tBy AndrÃ© Rinas, www.andrerinas.de\r\n\tDocumentation, www.simplelightbox.com\r\n\tAvailable for use under the MIT License\r\n\tVersion 2.14.2\r\n*/\nclass SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        captionHTML: true,\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5,\n        download: false\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    this.close();\n                    return;\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    getCaptionElement(elem) {\n        // look at sibling selector\n        if( this.options.captionSelector.startsWith('+')) {\n            let selector = this.options.captionSelector.replace(/^\\+/, '').trimStart();\n            let sibling = elem.nextElementSibling;\n            if(sibling && sibling.matches(selector)) {\n                return sibling;\n            }\n            return false;\n        }\n        else if( this.options.captionSelector.startsWith('>') ) {\n            let selector = this.options.captionSelector.replace(/^>/, '').trimStart();\n            return elem.querySelector(selector);\n        }\n        else {\n            return elem.querySelector(this.options.captionSelector);\n        }\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.trim().split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.download = document.createElement('div');\n        this.domNodes.download.classList.add('sl-download');\n\n        this.domNodes.downloadLink = document.createElement('a');\n        this.domNodes.downloadLink.setAttribute('download', '');\n        this.domNodes.downloadLink.textContent = this.options.download;\n\n        this.domNodes.download.appendChild(this.domNodes.downloadLink);\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || (element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')($|\\\\?.*$)', 'i').test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight + 'px';\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            if(this.options.overlay) {\n                document.body.removeChild(this.domNodes.overlay);\n            }\n            this.domNodes.additionalHtml = null;\n            this.domNodes.download = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    if(!this.currentImage) return;\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : this.getCaptionElement(this.relatedElements[this.currentImageIndex]);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n            if (this.options.download) {\n                this.domNodes.downloadLink.setAttribute('href', this.currentImage.getAttribute('src'));\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                // event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth, allowHTML) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n\n            const property = (allowHTML ?? this.options.captionHTML) ?? true ? 'innerHTML' : 'innerText';\n\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption[property] = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        if (this.options.download && this.domNodes.download) {\n            this.domNodes.wrapper.appendChild(this.domNodes.download);\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton, this.domNodes.download], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element) {\n                element.style.opacity = 0;\n                element.style.display = display || \"block\";\n            }\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = currentOpacity;\n                        }\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = opacityTarget;\n                        }\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem, position = 0) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        if(position > 0) {\n            elem = this.elements[position];\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    openPosition(position) {\n        let elem = this.elements[position];\n        this.open(elem, position)\n    }\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n"],
  "mappings": ";;;;;AAMA,IAAM,iBAAN,MAAqB;AAAA,EAgIjB,YAAY,UAAU,SAAS;AA9H/B,0CAAiB;AAAA,MACb,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,KAAK;AAAA,MACL,SAAS,CAAC,YAAY,UAAU;AAAA,MAChC,UAAU;AAAA,MACV,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,cAAc;AAAA,MACd,aAAa;AAAA,MACb,OAAO;AAAA,MACP,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,MAAM;AAAA,MACN,KAAK;AAAA,MACL,UAAU;AAAA,MACV,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,gBAAgB;AAAA,MAChB,SAAS;AAAA,MACT,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,SAAS;AAAA,MACT,WAAW;AAAA,MACX,KAAK;AAAA,MACL,YAAY;AAAA,MACZ,WAAW;AAAA,MACX,cAAc;AAAA,MACd,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,kBAAkB;AAAA,MAClB,UAAU;AAAA,IACd;AAEA;AACA;AACA,6CAAoB;AAEpB,yCAAiB,kBAAkB;AACnC,yCAAgB,0BAA0B,KAAK,UAAU,QAAQ;AAEjE;AAEA,4CAAoB,eAAe;AAEnC,kCAAS;AACT,uCAAc;AACd,qCAAY;AACZ,oCAAW;AACX,0CAAiB;AACjB,uCAAc;AACd,6CAAoB;AACpB,gDAAuB;AAEvB;AACA,0CAAiB;AACjB,oCAAW,CAAC;AAEZ,wCAAe,CAAC;AAChB,6CAAoB;AACpB,6CAAoB;AAEpB,2CAAkB;AAClB,gDAAuB;AAEvB,8CAAqB;AAAA,MACjB,WAAW;AAAA,MACX,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,aAAa;AAAA,MACb,WAAW;AAAA,MACX,WAAW;AAAA,MACX,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,iBAAiB;AAAA,MACjB,gBAAgB;AAAA,MAChB,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,UAAU;AAAA,MACV,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,uBAAuB;AAAA,MACvB,uBAAuB;AAAA,MACvB,wBAAwB;AAAA,MACxB,wBAAwB;AAAA,MACxB,cAAc;AAAA,MACd,sBAAsB;AAAA,MACtB,gBAAgB;AAAA,MAChB,gBAAgB;AAAA,MAChB,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,eAAe;AAAA,MACf,eAAe;AAAA,MACf,aAAa;AAAA,MACb,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,iBAAiB;AAAA,MACjB,qBAAqB;AAAA,MACrB,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,gBAAgB;AAAA,IACpB;AAII,SAAK,UAAU,OAAO,OAAO,KAAK,gBAAgB,OAAO;AACzD,SAAK,2BAA2B,KAAK,0BAA0B;AAE/D,QAAI,OAAO,aAAa,UAAU;AAC9B,WAAK,kBAAkB;AACvB,WAAK,WAAW,MAAM,KAAK,SAAS,iBAAiB,QAAQ,CAAC;AAAA,IAClE,OAAO;AACH,WAAK,WAAa,OAAO,SAAS,WAAW,eAAgB,SAAS,SAAS,IAAK,MAAM,KAAK,QAAQ,IAAI,CAAC,QAAQ;AAAA,IACxH;AAEA,SAAK,kBAAkB,CAAC;AAExB,SAAK,mBAAmB,KAAK,0BAA0B;AACvD,SAAK,oBAAoB,KAAK,qBAAqB;AACnD,SAAK,sBAAsB,KAAK;AAGhC,QAAI,KAAK,QAAQ,KAAK;AAClB,WAAK,WAAW,KAAK,WAAW,KAAK,QAAQ,GAAG;AAAA,IACpD;AAEA,QAAI,KAAK,QAAQ,cAAc;AAC3B,UAAI,SAAS,CAAC;AACd,WAAK,WAAW,MAAM,KAAK,KAAK,QAAQ,EAAE;AAAA,QACtC,aAAW;AACP,cAAI,MAAM,QAAQ,aAAa,KAAK,QAAQ,UAAU;AACtD,cAAG,OAAO,QAAQ,GAAG,MAAM,IAAI;AAC3B,mBAAO,KAAK,GAAG;AACf,mBAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,IACJ;AAEA,SAAK,eAAe;AAEpB,QAAI,KAAK,QAAQ,OAAO;AACpB,WAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,WAAW;AAAA,IAC/D;AAEA,QAAI,KAAK,QAAQ,KAAK;AAClB,WAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,UAAU;AAAA,IAC9D;AAEA,QAAI,KAAK,QAAQ,SAAS;AACtB,WAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,OAAO;AAAA,IAC3D;AAEA,SAAK,iBAAiB,KAAK,UAAU,WAAW,KAAK,gBAAgB,CAAC,UAAU;AAE5E,UAAI,KAAK,YAAY,MAAM,aAAa,GAAG;AACvC,cAAM,eAAe;AACrB,YAAI,KAAK,aAAa;AAClB,iBAAO;AAAA,QACX;AAEA,aAAK,oBAAoB,KAAK,SAAS,QAAQ,MAAM,aAAa;AAClE,aAAK,UAAU,MAAM,aAAa;AAAA,MACtC;AAAA,IACJ,CAAC;AAGD,QAAI,KAAK,QAAQ,UAAU;AACvB,WAAK,iBAAiB,KAAK,SAAS,SAAS,CAAC,WAAW,KAAK,gBAAgB,gBAAgB,KAAK,cAAc,GAAG,CAAC,UAAU;AAC3H,YAAI,KAAK,UAAU,MAAM,WAAW,MAAM,eAAe;AACrD,eAAK,MAAM;AAAA,QACf;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,QAAI,KAAK,QAAQ,mBAAmB;AAChC,WAAK,iBAAiB,SAAS,MAAM,iBAAiB,KAAK,gBAAgB,CAAC,UAAU;AAClF,YAAI,MAAM,OAAO,cAAc,UAAU,SAAS,UAAU,GAAG;AAC3D,gBAAM,eAAe;AAAA,QACzB;AAAA,MACJ,CAAC;AAAA,IACL;AAGA,QAAI,KAAK,QAAQ,gBAAgB;AAC7B,WAAK,iBAAiB,SAAS,MAAM,WAAW,KAAK,gBAAgB,KAAK,SAAS,CAAC,UAAU;AAC1F,aAAK,mBAAmB,YAAY;AAGpC,YAAI,KAAK,eAAe,MAAM,QAAQ,UAAU;AAC5C,eAAK,aAAa,aAAa,OAAO,EAAE;AACxC,eAAK,cAAc;AACnB,eAAK,MAAM;AACX;AAAA,QACJ;AAEA,YAAI,KAAK,QAAQ;AACb,gBAAM,eAAe;AACrB,cAAI,MAAM,QAAQ,UAAU;AACxB,iBAAK,MAAM;AAAA,UACf;AACA,cAAG,CAAC,KAAK,eAAe,CAAC,aAAa,YAAY,EAAE,QAAQ,MAAM,GAAG,IAAI,IAAI;AAC3E,iBAAK,UAAU,MAAM,QAAQ,eAAe,IAAI,EAAE;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ,GAAG,KAAK,QAAQ,gBAAgB,CAAC;AAAA,IACrC;AAEA,SAAK,UAAU;AAAA,EACnB;AAAA,EAEA,4BAA4B;AAGxB,QAAI,kBAAkB;AACtB,QAAI;AACA,UAAI,OAAO,OAAO,eAAe,CAAC,GAAG,WAAW;AAAA,QAC5C,KAAK,WAAW;AACZ,4BAAkB;AAAA,QACtB;AAAA,MACJ,CAAC;AACD,aAAO,iBAAiB,eAAe,MAAM,IAAI;AACjD,aAAO,oBAAoB,eAAe,MAAM,IAAI;AAAA,IACxD,SAAS,GAAP;AAAA,IAAW;AACb,WAAO;AAAA,EACX;AAAA,EAEA,kBAAkB,MAAM;AAEpB,QAAI,KAAK,QAAQ,gBAAgB,WAAW,GAAG,GAAG;AAC9C,UAAI,WAAW,KAAK,QAAQ,gBAAgB,QAAQ,OAAO,EAAE,EAAE,UAAU;AACzE,UAAI,UAAU,KAAK;AACnB,UAAG,WAAW,QAAQ,QAAQ,QAAQ,GAAG;AACrC,eAAO;AAAA,MACX;AACA,aAAO;AAAA,IACX,WACS,KAAK,QAAQ,gBAAgB,WAAW,GAAG,GAAI;AACpD,UAAI,WAAW,KAAK,QAAQ,gBAAgB,QAAQ,MAAM,EAAE,EAAE,UAAU;AACxE,aAAO,KAAK,cAAc,QAAQ;AAAA,IACtC,OACK;AACD,aAAO,KAAK,cAAc,KAAK,QAAQ,eAAe;AAAA,IAC1D;AAAA,EACJ;AAAA,EAEA,sBAAsB,MAAM;AACxB,UAAM;AAAA,MACF;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,IAAI;AAEJ,QAAI,YAAY;AAAQ,aAAO;AAE/B,QAAI,MAAM;AAEV,WAAQ,OAAO,KAAM,IAAI,OAAO;AAEhC,QAAI,WAAW;AACX,YAAM,UAAU,UAAU,KAAK,EAAE,MAAM,IAAI;AAC3C,eAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,eAAO,IAAI,QAAQ;AAAA,MACvB;AAAA,IACJ;AAEA,QAAI,aAAa;AAEjB,aAAS,IAAI,MAAM,EAAE,wBAAwB,IAAI,EAAE,wBAAwB;AACvE,oBAAc;AAAA,IAClB;AAEA,WAAO,cAAc;AAErB,WAAO,GAAG,KAAK,sBAAsB,UAAU,OAAO;AAAA,EAC1D;AAAA,EAEA,iBAAiB;AACb,SAAK,SAAS,UAAU,SAAS,cAAc,KAAK;AACpD,SAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAChD,SAAK,SAAS,QAAQ,QAAQ,gBAAgB,KAAK,QAAQ;AAE3D,SAAK,SAAS,cAAc,SAAS,cAAc,QAAQ;AAC3D,SAAK,SAAS,YAAY,UAAU,IAAI,UAAU;AAClD,SAAK,SAAS,YAAY,YAAY,KAAK,QAAQ;AAEnD,SAAK,SAAS,UAAU,SAAS,cAAc,KAAK;AACpD,SAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAChD,SAAK,SAAS,QAAQ,YAAY;AAElC,SAAK,SAAS,aAAa,SAAS,cAAc,KAAK;AACvD,SAAK,SAAS,WAAW,UAAU,IAAI,eAAe;AACtD,SAAK,SAAS,WAAW,YAAY,2BAA2B,KAAK,QAAQ,QAAQ,sCAAsC,KAAK,QAAQ,QAAQ;AAEhJ,SAAK,SAAS,UAAU,SAAS,cAAc,KAAK;AACpD,SAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAChD,SAAK,SAAS,QAAQ,YAAY;AAElC,SAAK,SAAS,WAAW,SAAS,cAAc,KAAK;AACrD,SAAK,SAAS,SAAS,UAAU,IAAI,aAAa;AAElD,SAAK,SAAS,eAAe,SAAS,cAAc,GAAG;AACvD,SAAK,SAAS,aAAa,aAAa,YAAY,EAAE;AACtD,SAAK,SAAS,aAAa,cAAc,KAAK,QAAQ;AAEtD,SAAK,SAAS,SAAS,YAAY,KAAK,SAAS,YAAY;AAE7D,SAAK,SAAS,UAAU,SAAS,cAAc,KAAK;AACpD,SAAK,SAAS,QAAQ,UAAU,IAAI,cAAc,SAAS,KAAK,QAAQ,eAAe;AACvF,QAAI,KAAK,QAAQ,cAAc;AAC3B,UAAI,iBAAiB,KAAK,QAAQ,aAAa,MAAM,QAAQ;AAC7D,WAAK,SAAS,QAAQ,UAAU,IAAI,GAAG,cAAc;AAAA,IACzD;AAEA,SAAK,SAAS,QAAQ,SAAS,cAAc,KAAK;AAClD,SAAK,SAAS,MAAM,UAAU,IAAI,UAAU;AAE5C,SAAK,SAAS,UAAU,SAAS,cAAc,KAAK;AACpD,SAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAChD,SAAK,SAAS,QAAQ,aAAa,YAAW,EAAE;AAChD,SAAK,SAAS,QAAQ,aAAa,QAAO,QAAQ;AAClD,SAAK,SAAS,QAAQ,aAAa,eAAc,KAAK;AACtD,QAAI,KAAK,QAAQ,WAAW;AACxB,WAAK,SAAS,QAAQ,UAAU,IAAI,KAAK,QAAQ,SAAS;AAAA,IAC9D;AACA,QAAG,KAAK,QAAQ,KAAK;AACjB,WAAK,SAAS,QAAQ,UAAU,IAAI,YAAY;AAAA,IACpD;AAAA,EACJ;AAAA,EAEA,SAAS,MAAM,OAAO;AAClB,QAAI;AACJ,WAAO,WAAY;AACf,UAAI,CAAC,YAAY;AACb,aAAK,MAAM,MAAM,SAAS;AAC1B,qBAAa;AACb,mBAAW,WAAY;AACnB,iBAAO,aAAa;AAAA,QACxB,GAAG,KAAK;AAAA,MACZ;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,YAAY,SAAS;AACjB,WAAQ,CAAC,KAAK,QAAQ,WAAa,QAAQ,aAAa,KAAK,QAAQ,UAAU,KAAK,IAAI,OAAO,MAAM,KAAK,QAAQ,UAAU,eAAe,GAAG,EAAE,KAAK,QAAQ,aAAa,KAAK,QAAQ,UAAU,CAAC;AAAA,EACtM;AAAA,EAEA,4BAA4B;AACxB,QAAI,KAAK,SAAS,QAAQ,SAAS,iBAAiB;AAEpD,WAAO,gBAAgB,IAAI,KACvB,sBAAsB,IAAI,aACtB,mBAAmB,IAAI,UACnB,iBAAiB,IAAI,OACjB;AAAA,EACpB;AAAA,EAEA,oBAAoB;AAChB,QAAI,iBAAiB;AACrB,QAAI,YAAY,SAAS,cAAc,KAAK;AAC5C,cAAU,UAAU,IAAI,sBAAsB;AAE9C,aAAS,KAAK,YAAY,SAAS;AACnC,qBAAiB,UAAU,cAAc,UAAU;AACnD,aAAS,KAAK,YAAY,SAAS;AACnC,WAAO;AAAA,EACX;AAAA,EAEA,gBAAgB,MAAM;AAClB,QAAI,iBAAiB;AACrB,QAAI,gBAAiB,CAAC,EAAE,MAAM,KAAK,SAAS,iBAAiB,MAAI,KAAK,QAAQ,UAAU,CAAC;AACzF,QAAI,SAAS,QAAQ;AACjB,UAAI,kBAAkB,OAAO;AAC7B,UAAI,CAAC,iBAAiB;AAClB,YAAI,sBAAsB,SAAS,gBAAgB,sBAAsB;AACzE,0BAAkB,oBAAoB,QAAQ,KAAK,IAAI,oBAAoB,IAAI;AAAA,MACnF;AACA,UAAI,SAAS,KAAK,cAAc,mBAAmB,KAAK,eAAe;AACnE,YAAI,eAAe,SAAS,OAAO,iBAAiB,SAAS,IAAI,EAAE,gBAAgB,GAAG,EAAE;AACxF,yBAAiB,KAAK,kBAAkB;AACxC,iBAAS,KAAK,QAAQ,uBAAuB;AAC7C,YAAI,iBAAiB,KAAM,kBAAkB,KAAK,KAAK,eAAgB;AACnE,mBAAS,KAAK,UAAU,IAAI,eAAe;AAC3C,mBAAS,KAAK,MAAM,eAAgB,eAAe,iBAAkB;AAErE,wBAAc,QAAQ,aAAW;AAC7B,kBAAM,gBAAgB,QAAQ,MAAM;AACpC,kBAAM,oBAAoB,OAAO,iBAAiB,OAAO,EAAE;AAC3D,oBAAQ,QAAQ,uBAAuB;AACvC,oBAAQ,MAAM,eAAe,GAAG,WAAW,iBAAiB,IAAI;AAAA,UACpE,CAAC;AAAA,QAEL;AAAA,MACJ;AAAA,IACJ,OAAO;AACH,eAAS,KAAK,UAAU,OAAO,eAAe;AAC9C,eAAS,KAAK,MAAM,eAAe,SAAS,KAAK,QAAQ,uBAAuB;AAEhF,oBAAc,QAAQ,aAAW;AAC7B,cAAM,UAAU,QAAQ,QAAQ;AAChC,YAAI,OAAO,YAAY,aAAa;AAChC,kBAAQ,MAAM,eAAe;AAAA,QACjC;AAAA,MACJ,CAAC;AAAA,IACL;AACA,WAAO;AAAA,EACX;AAAA,EAEA,QAAQ;AACJ,QAAI,CAAC,KAAK,UAAU,KAAK,eAAe,KAAK,WAAW;AACpD,aAAO;AAAA,IACX;AAEA,SAAK,YAAY;AACjB,QAAI,UAAU,KAAK,gBAAgB,KAAK;AACxC,YAAQ,cAAc,IAAI,MAAM,sBAAsB,CAAC;AAEvD,QAAI,KAAK,QAAQ,SAAS;AACtB,WAAK,oBAAoB;AACzB,UAAG,CAAC,KAAK,aAAa;AAClB,aAAK,UAAU;AAAA,MACnB;AAAA,IACJ;AAEA,SAAK,oBAAoB,UAAU,aAAa,KAAK,cAAc;AAEnE,SAAK,QAAQ,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAC1D,SAAK,QAAQ,SAAS,iBAAiB,+EAA+E,GAAG,KAAK,QAAQ,WAAW,MAAM;AACnJ,UAAI,KAAK,QAAQ,eAAe;AAC5B,aAAK,gBAAgB,MAAM;AAAA,MAC/B;AAEA,UAAI,KAAK,QAAQ,aAAa,KAAK,QAAQ,cAAc,IAAI;AACzD,iBAAS,cAAc,MAAM,EAAE,UAAU,OAAO,KAAK,QAAQ,SAAS;AAAA,MAC1E;AAEA,eAAS,KAAK,YAAY,KAAK,SAAS,OAAO;AAC/C,UAAG,KAAK,QAAQ,SAAS;AACrB,iBAAS,KAAK,YAAY,KAAK,SAAS,OAAO;AAAA,MACnD;AACA,WAAK,SAAS,iBAAiB;AAC/B,WAAK,SAAS,WAAW;AAEzB,cAAQ,cAAc,IAAI,MAAM,uBAAuB,CAAC;AAExD,WAAK,YAAY;AAAA,IACrB,CAAC;AAED,SAAK,eAAe;AACpB,SAAK,SAAS;AACd,SAAK,cAAc;AAGnB,aAAS,OAAO,KAAK,oBAAoB;AACrC,WAAK,mBAAmB,OAAO;AAAA,IACnC;AACA,SAAK,mBAAmB,YAAY;AACpC,SAAK,mBAAmB,SAAS;AACjC,SAAK,mBAAmB,UAAU;AAClC,SAAK,mBAAmB,eAAe,KAAK,OAAO,GAAG,GAAG,KAAK,QAAQ,OAAO;AAC7E,SAAK,mBAAmB,eAAe;AAAA,EAC3C;AAAA,EAEA,IAAI,OAAO;AACP,WAAO,OAAO,SAAS,KAAK,UAAU,CAAC;AAAA,EAC3C;AAAA,EAEA,UAAU;AACN,QAAI,QAAQ,KAAK,mBACb,SAAS,KAAK,gBAAgB,QAC9B,OAAQ,QAAQ,IAAI,IAAK,SAAS,IAAK,QAAQ,KAAK,SAAS,IAAK,IAAI,QAAQ,GAC9E,OAAQ,QAAQ,IAAI,IAAK,SAAS,IAAK,QAAQ,KAAK,SAAS,IAAK,IAAI,QAAQ,GAC9E,YAAY,IAAI,MAAM,GACtB,YAAY,IAAI,MAAM;AAE1B,cAAU,iBAAiB,QAAQ,CAAC,UAAU;AAC1C,UAAI,MAAM,MAAM,OAAO,aAAa,KAAK;AACzC,UAAI,KAAK,aAAa,QAAQ,GAAG,MAAM,IAAI;AACvC,aAAK,aAAa,KAAK,GAAG;AAAA,MAC9B;AACA,WAAK,gBAAgB,OAAO,cAAc,IAAI,MAAM,qBAAqB,KAAK,cAAc,CAAC;AAAA,IACjG,CAAC;AACD,cAAU,aAAa,OAAO,KAAK,gBAAgB,MAAM,aAAa,KAAK,QAAQ,UAAU,CAAC;AAE9F,cAAU,iBAAiB,QAAQ,CAAC,UAAU;AAC1C,UAAI,MAAM,MAAM,OAAO,aAAa,KAAK;AACzC,UAAI,KAAK,aAAa,QAAQ,GAAG,MAAM,IAAI;AACvC,aAAK,aAAa,KAAK,GAAG;AAAA,MAC9B;AACA,WAAK,gBAAgB,OAAO,cAAc,IAAI,MAAM,qBAAqB,KAAK,cAAc,CAAC;AAAA,IACjG,CAAC;AACD,cAAU,aAAa,OAAO,KAAK,gBAAgB,MAAM,aAAa,KAAK,QAAQ,UAAU,CAAC;AAAA,EAClG;AAAA,EAEA,UAAU,WAAW;AACjB,QAAI,iBAAiB;AACrB,QAAG,KAAK,QAAQ,KAAK;AACjB,kBAAY,CAAC;AAAA,IACjB;AAEA,SAAK,gBAAgB,KAAK,mBAAmB,cAAc,IAAI,MAAM,YAAY,KAAK,cAAc,CAAC;AACrG,SAAK,gBAAgB,KAAK,mBAAmB,cAAc,IAAI,OAAO,cAAc,IAAI,SAAS,UAAU,MAAM,KAAK,cAAc,CAAC;AAErI,QAAI,WAAW,KAAK,oBAAoB;AAExC,QAAI,KAAK,gBAAgB,WAAW,KAAK,YAAY,KAAK,gBAAgB,WAAW,KAAK,QAAQ,SAAS,OAAO;AAC9G,aAAO;AAAA,IACX;AAEA,SAAK,oBAAqB,WAAW,IAAK,KAAK,gBAAgB,SAAS,IAAK,WAAW,KAAK,gBAAgB,SAAS,IAAK,IAAI;AAE/H,SAAK,SAAS,QAAQ,cAAc,aAAa,EAAE,YAAY,KAAK,oBAAoB;AAGxF,QAAI,KAAK,QAAQ,gBAAgB;AAC7B,WAAK,MAAM,KAAK,QAAQ,iBAAiB,KAAO,OAAO,iBAAkB,KAAK,mBAAmB,YAAY,IAAI;AAAA,IACrH;AACA,SAAK,QAAQ,KAAK,SAAS,OAAO,KAAK,QAAQ,WAAW,MAAM;AAC5D,WAAK,cAAc;AACnB,UAAG,CAAC,KAAK,WAAW;AAChB,mBAAW,MAAM;AACb,cAAI,UAAU,KAAK,gBAAgB,KAAK;AACxC,cAAG,CAAC,KAAK;AAAc;AACvB,eAAK,aAAa,aAAa,OAAO,QAAQ,aAAa,KAAK,QAAQ,UAAU,CAAC;AAEnF,cAAI,KAAK,aAAa,QAAQ,QAAQ,aAAa,KAAK,QAAQ,UAAU,CAAC,MAAM,IAAI;AACjF,iBAAK,KAAK,KAAK,SAAS,OAAO;AAAA,UACnC;AAEA,cAAG,KAAK,SAAS,MAAM,SAAS,KAAK,SAAS,OAAO,GAAG;AACtD,iBAAK,SAAS,MAAM,YAAY,KAAK,SAAS,OAAO;AAAA,UACvD;AAEA,eAAK,YAAY,cAAc;AAC/B,cAAI,KAAK,QAAQ;AAAY,iBAAK,QAAQ;AAAA,QAC9C,GAAG,GAAG;AAAA,MACV,OAAO;AACH,aAAK,cAAc;AAAA,MACvB;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAEA,YAAY,WAAW;AACnB,QAAI,CAAC,KAAK,cAAc;AACpB,aAAO;AAAA,IACX;AAEA,QAAI,WAAW,IAAI,MAAM,GACrB,cAAc,OAAO,aAAa,KAAK,QAAQ,YAC/C,eAAe,OAAO,cAAc,KAAK,QAAQ;AAErD,aAAS,aAAa,OAAO,KAAK,aAAa,aAAa,KAAK,CAAC;AAElE,SAAK,aAAa,QAAQ,QAAQ;AAClC,SAAK,aAAa,QAAQ,aAAa;AACvC,SAAK,aAAa,QAAQ,aAAa;AACvC,SAAK,eAAe,GAAG,GAAG,CAAC;AAE3B,aAAS,iBAAiB,SAAS,CAAC,UAAU;AAC1C,WAAK,gBAAgB,KAAK,mBAAmB,cAAc,IAAI,MAAM,WAAW,KAAK,cAAc,CAAC;AACpG,WAAK,cAAc;AACnB,WAAK,SAAS;AACd,WAAK,SAAS,QAAQ,MAAM,UAAU;AAEtC,UAAI,eAAe,cAAc,KAAK,cAAc;AACpD,UAAI,KAAK,sBAAsB,KAAK,qBAAqB,cAAc;AACnE,eAAO,KAAK,MAAM;AAAA,MACtB;AAEA,UAAI,KAAK,QAAQ,YAAY;AACzB,cAAM,KAAK,QAAQ,iBAAiB;AAAA,MACxC;AAEA,WAAK,UAAU,eAAe,YAAY,CAAC;AAAA,IAC/C,CAAC;AAGD,aAAS,iBAAiB,QAAQ,CAAC,UAAU;AACzC,UAAI,OAAO,cAAc,aAAa;AAClC,aAAK,gBAAgB,KAAK,mBAAmB,cAAc,IAAI,MAAM,aAAa,KAAK,cAAc,CAAC;AACtG,aAAK,gBAAgB,KAAK,mBAAmB,cAAc,IAAI,OAAO,cAAc,IAAI,aAAa,cAAc,MAAM,KAAK,cAAc,CAAC;AAAA,MACjJ;AAGA,UAAI,KAAK,QAAQ,SAAS;AACtB,aAAK,UAAU;AAAA,MACnB;AAEA,UAAI,KAAK,aAAa,QAAQ,KAAK,aAAa,aAAa,KAAK,CAAC,MAAM,IAAI;AACzE,aAAK,aAAa,KAAK,KAAK,aAAa,aAAa,KAAK,CAAC;AAAA,MAChE;AAEA,UAAI,aAAa,MAAM,OAAO,OAC1B,cAAc,MAAM,OAAO;AAE/B,UAAI,KAAK,QAAQ,qBAAqB,aAAa,eAAe,cAAc,cAAc;AAC1F,YAAI,QAAQ,aAAa,cAAc,cAAc,eAAe,aAAa,cAAc,cAAc;AAC7G,sBAAc;AACd,uBAAe;AAAA,MACnB;AAEA,WAAK,SAAS,MAAM,MAAM,OAAO,OAAO,cAAc,eAAe,IAAI;AACzE,WAAK,SAAS,MAAM,MAAM,QAAQ,OAAO,aAAa,aAAa,KAAK,wBAAwB,IAAI;AACpG,WAAK,SAAS,MAAM,MAAM,QAAQ,aAAa;AAC/C,WAAK,SAAS,MAAM,MAAM,SAAS,cAAc;AAEjD,WAAK,SAAS,QAAQ,MAAM,UAAU;AACtC,UAAI,KAAK,QAAQ,OAAQ;AACrB,aAAK,WAAW;AAAA,MACpB;AACA,WAAK,OAAO,KAAK,cAAc,KAAK,QAAQ,WAAW,MAAM;AACzD,YAAI,KAAK,QAAQ,OAAQ;AACrB,eAAK,SAAS,QAAQ,MAAM;AAAA,QAChC;AAAA,MACJ,CAAC;AAED,WAAK,SAAS;AAEd,UAAI,kBACA;AAEJ,UAAI,OAAO,KAAK,QAAQ,oBAAoB,UAAU;AAClD,2BAAmB,KAAK,QAAQ,oBAAoB,SAC9C,KAAK,gBAAgB,KAAK,qBAC1B,KAAK,kBAAkB,KAAK,gBAAgB,KAAK,kBAAkB;AAAA,MAC7E,WAAW,OAAO,KAAK,QAAQ,oBAAoB,YAAY;AAC3D,2BAAmB,KAAK,QAAQ,gBAAgB,KAAK,gBAAgB,KAAK,kBAAkB;AAAA,MAChG;AAEA,UAAG,KAAK,QAAQ,YAAY,kBAAkB;AAC1C,YAAI,KAAK,QAAQ,gBAAgB,QAAQ;AACrC,wBAAc,iBAAiB,QAAQ,KAAK,QAAQ;AAAA,QACxD,WAAW,KAAK,QAAQ,gBAAgB,QAAQ;AAC5C,wBAAc,iBAAiB;AAAA,QACnC,OAAO;AACH,wBAAc,iBAAiB,aAAa,KAAK,QAAQ,YAAY;AAAA,QACzE;AAAA,MACJ;AAEA,UAAI,CAAC,KAAK,QAAQ,MAAM;AACpB,YAAI,KAAK,sBAAsB,GAAG;AAC9B,eAAK,KAAK,KAAK,SAAS,WAAW,cAAc,UAAU,CAAC;AAAA,QAChE;AACA,YAAI,KAAK,qBAAqB,KAAK,gBAAgB,SAAS,GAAG;AAC3D,eAAK,KAAK,KAAK,SAAS,WAAW,cAAc,UAAU,CAAC;AAAA,QAChE;AACA,YAAI,KAAK,oBAAoB,GAAG;AAC5B,eAAK,KAAK,KAAK,SAAS,WAAW,cAAc,UAAU,CAAC;AAAA,QAChE;AACA,YAAI,KAAK,oBAAoB,KAAK,gBAAgB,SAAS,GAAG;AAC1D,eAAK,KAAK,KAAK,SAAS,WAAW,cAAc,UAAU,CAAC;AAAA,QAChE;AAAA,MACJ,OAAO;AACH,YAAI,KAAK,gBAAgB,WAAW,GAAG;AACnC,eAAK,KAAK,KAAK,SAAS,WAAW,iBAAiB,oBAAoB,CAAC;AAAA,QAC7E,OAAO;AACH,eAAK,KAAK,KAAK,SAAS,WAAW,iBAAiB,oBAAoB,CAAC;AAAA,QAC7E;AAAA,MACJ;AAGA,UAAI,cAAc,KAAK,cAAc,IAAI;AACrC,YAAI,KAAK,QAAQ,gBAAgB;AAC7B,eAAK,MAAM,GAAG,MAAM,YAAY,IAAI;AACpC,qBAAW,MAAM;AACb,iBAAK,MAAM,KAAK,QAAQ,iBAAiB,KAAM,IAAI,IAAI;AAAA,UAC3D,GAAG,EAAE;AAAA,QACT;AACA,aAAK,OAAO,KAAK,SAAS,OAAO,KAAK,QAAQ,WAAW,MAAM;AAC3D,eAAK,cAAc;AACnB,eAAK,WAAW,aAAa,UAAU;AAAA,QAC3C,CAAC;AAAA,MAEL,OAAO;AACH,aAAK,cAAc;AACnB,aAAK,WAAW,aAAa,UAAU;AAAA,MAC3C;AAEA,UAAI,KAAK,QAAQ,kBAAkB,CAAC,KAAK,SAAS,gBAAgB;AAC9D,aAAK,SAAS,iBAAiB,SAAS,cAAc,KAAK;AAC3D,aAAK,SAAS,eAAe,UAAU,IAAI,oBAAoB;AAC/D,aAAK,SAAS,eAAe,YAAY,KAAK,QAAQ;AACtD,aAAK,SAAS,MAAM,YAAY,KAAK,SAAS,cAAc;AAAA,MAChE;AAEA,UAAI,KAAK,QAAQ,UAAU;AACvB,aAAK,SAAS,aAAa,aAAa,QAAQ,KAAK,aAAa,aAAa,KAAK,CAAC;AAAA,MACzF;AAAA,IAEJ,CAAC;AAAA,EACL;AAAA,EAEA,eAAe,eAAe,eAAe,aAAa;AAEtD,SAAK,aAAa,MAAM,KAAK,mBAAmB,eAAe,eAAe,gBAAgB,MAAM,gBAAgB,aAAa,cAAc;AAAA,EAEnJ;AAAA,EAEA,OAAO,OAAO,KAAK,KAAK;AACpB,WAAQ,QAAQ,MAAO,MAAO,QAAQ,MAAO,MAAM;AAAA,EACvD;AAAA,EAEA,YAAY,cAAc,eAAe,eAAe;AACpD,SAAK,aAAa,QAAQ,QAAQ;AAClC,SAAK,aAAa,QAAQ,aAAa;AACvC,SAAK,aAAa,QAAQ,aAAa;AAAA,EAC3C;AAAA,EAGA,oBAAoB;AAChB,QAAI,KAAK,UAAU,KAAK,SAAS,KAAK,qBAAqB;AACvD,WAAK,cAAc;AACnB,WAAK,MAAM;AAAA,IACf;AAAA,EACJ;AAAA,EAEA,YAAY;AAGR,SAAK,iBAAiB,QAAQ,YAAY,KAAK,gBAAgB,CAAC,UAAU;AAEtE,UAAI,KAAK,QAAQ;AACb,aAAK,YAAY;AAAA,MACrB;AAAA,IACJ,CAAC;AAED,SAAK,iBAAiB,KAAK,SAAS,aAAa,CAAC,WAAW,KAAK,gBAAgB,gBAAgB,KAAK,cAAc,GAAG,KAAK,MAAM,KAAK,IAAI,CAAC;AAE7I,QAAI,KAAK,QAAQ,SAAS;AACtB,iBAAW,MAAM;AACb,aAAK,iBAAiB,QAAQ,gBAAgB,KAAK,gBAAgB,CAAC,UAAU;AAC1E,cAAI,KAAK,QAAQ;AACb,iBAAK,kBAAkB;AAAA,UAC3B;AAAA,QACJ,CAAC;AAAA,MACL,GAAG,EAAE;AAAA,IACT;AAEA,SAAK,iBAAiB,KAAK,SAAS,WAAW,qBAAqB,QAAQ,GAAG,WAAW,KAAK,gBAAgB,CAAC,UAAU;AACtH,UAAI,CAAC,MAAM,cAAc,QAAQ,MAAM,SAAS,GAAG;AAC/C,eAAO;AAAA,MACX;AAEA,YAAM,eAAe;AACrB,WAAK,mBAAmB,YAAY;AACpC,WAAK,UAAU,MAAM,cAAc,UAAU,SAAS,SAAS,IAAI,IAAI,EAAE;AAAA,IAC7E,CAAC;AAED,QAAI,KAAK,QAAQ,YAAY;AACzB,UAAI,QAAQ;AAEZ,WAAK,iBAAiB,KAAK,SAAS,OAAO,CAAC,cAAa,gBAAgB,GAAG,CAAC,UAAU;AACnF,YAAI,KAAK,mBAAmB,aAAa,KAAK,eAAe,KAAK,aAAa,CAAC,KAAK,QAAQ;AACzF,iBAAO;AAAA,QACX;AACA,YAAG,KAAK,mBAAmB,mBAAmB,GAAG;AAC7C,eAAK,mBAAmB,kBAAkB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AAClF,eAAK,mBAAmB,iBAAiB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AACjF,eAAK,mBAAmB,YAAY,KAAK,cAAc,KAAK,YAAY,EAAE;AAC1E,eAAK,mBAAmB,WAAW,KAAK,cAAc,KAAK,YAAY,EAAE;AACzE,eAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAC/D,eAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAE/D,eAAK,mBAAmB,iBAAiB,WAAW,KAAK,aAAa,QAAQ,UAAU;AACxF,eAAK,mBAAmB,iBAAiB,WAAW,KAAK,aAAa,QAAQ,UAAU;AAAA,QAC5F;AAGA,YAAI,QAAQ,MAAM,SAAS,MAAM;AACjC,YAAI,UAAU,QAAW;AAErB,kBAAQ,MAAM;AAAA,QAClB;AACA,gBAAQ,KAAK,IAAI,IAAG,KAAK,IAAI,GAAE,KAAK,CAAC;AAGrC,iBAAS,QAAQ,KAAK,QAAQ,mBAAmB;AACjD,gBAAQ,KAAK,IAAI,GAAG,KAAK,IAAK,KAAK,QAAQ,SAAS,KAAK,CAAC;AAE1D,aAAK,mBAAmB,cAAc;AAEtC,YAAI,eAAe,SAAS,gBAAgB,aAAa,SAAS,KAAK;AAEvE,aAAK,mBAAmB,eAAe,MAAM;AAC7C,aAAK,mBAAmB,eAAe,MAAM,QAAQ,gBAAgB;AAErE,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,kBAAkB;AAC7J,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,mBAAmB;AAC/J,aAAK,mBAAmB,kBAAkB,KAAK,mBAAmB,cAAc,KAAK,mBAAmB;AACxG,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,iBAAiB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAuB,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,iBAAiB,IAAM,KAAK,mBAAmB,mBAAmB,KAAK,mBAAmB,cAAc,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,iBAAkB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AACxlB,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,kBAAkB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAuB,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,kBAAkB,IAAM,KAAK,mBAAmB,mBAAmB,KAAK,mBAAmB,cAAc,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,iBAAkB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AAE3lB,aAAK,eAAe,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,WAAW;AAEnJ,YAAI,KAAK,mBAAmB,cAAc,GAAG;AACzC,eAAK,mBAAmB,SAAS;AACjC,eAAM,CAAC,KAAK,SAAS,QAAQ,MAAM,WAAW,KAAK,SAAS,QAAQ,MAAM,UAAU,MAAM,KAAK,SAAS,QAAQ,MAAM,YAAY,QAAQ;AACtI,iBAAK,QAAQ,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,UAC9D;AAAA,QACJ,OAAO;AACH,cAAI,KAAK,mBAAmB,iBAAiB,GAAG;AAC5C,iBAAK,mBAAmB,SAAS;AACjC,gBAAI,KAAK,SAAS,QAAQ,MAAM,YAAY,QAAQ;AAChD,mBAAK,OAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,YAC7D;AAAA,UACJ;AACA,eAAK,mBAAmB,uBAAuB;AAC/C,eAAK,mBAAmB,UAAU;AAAA,QACtC;AAEA,aAAK,mBAAmB,uBAAuB,KAAK,mBAAmB;AACvE,aAAK,mBAAmB,eAAe,KAAK,mBAAmB;AAC/D,aAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AACjE,aAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AAEjE,aAAK,YAAY,KAAK,mBAAmB,aAAa,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,aAAa;AAClI,aAAK,eAAe,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,WAAW;AAAA,MAEvJ,CAAC;AAAA,IACL;AAEA,SAAK,iBAAiB,KAAK,SAAS,OAAO,CAAC,gBAAgB,KAAK,gBAAgB,eAAe,KAAK,cAAc,GAAG,CAAC,UAAU;AAC7H,UAAI,MAAM,OAAO,YAAY,OAAO,MAAM,SAAS,cAAc;AAC7D,eAAO;AAAA,MACX;AAEA,UAAI,MAAM,SAAS,aAAa;AAC5B,cAAM,eAAe;AACrB,aAAK,mBAAmB,wBAAwB,MAAM;AACtD,aAAK,mBAAmB,wBAAwB,MAAM;AACtD,aAAK,mBAAmB,kBAAkB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AAClF,aAAK,mBAAmB,iBAAiB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AACjF,aAAK,mBAAmB,YAAY,KAAK,cAAc,KAAK,YAAY,EAAE;AAC1E,aAAK,mBAAmB,WAAW,KAAK,cAAc,KAAK,YAAY,EAAE;AACzE,aAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAC/D,aAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAE/D,aAAK,mBAAmB,iBAAiB,WAAW,KAAK,aAAa,QAAQ,UAAU;AACxF,aAAK,mBAAmB,iBAAiB,WAAW,KAAK,aAAa,QAAQ,UAAU;AACxF,aAAK,mBAAmB,UAAU;AAAA,MACtC,OAAO;AACH,aAAK,mBAAmB,aAAa,MAAM,QAAQ;AACnD,aAAK,mBAAmB,wBAAwB,MAAM,QAAQ,GAAG;AACjE,aAAK,mBAAmB,wBAAwB,MAAM,QAAQ,GAAG;AACjE,aAAK,mBAAmB,kBAAkB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AAClF,aAAK,mBAAmB,iBAAiB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AACjF,aAAK,mBAAmB,YAAY,KAAK,cAAc,KAAK,YAAY,EAAE;AAC1E,aAAK,mBAAmB,WAAW,KAAK,cAAc,KAAK,YAAY,EAAE;AACzE,aAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAC/D,aAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAE/D,YAAI,KAAK,mBAAmB,eAAe,GAAsB;AAC7D,cAAI,CAAC,KAAK,mBAAmB,cAAc;AACvC,iBAAK,mBAAmB,eAAe;AACvC,uBAAW,MAAM;AACb,mBAAK,mBAAmB,eAAe;AAAA,YAC3C,GAAG,GAAG;AAAA,UACV,OAAO;AAEH,iBAAK,aAAa,UAAU,IAAI,eAAe;AAC/C,gBAAI,CAAC,KAAK,mBAAmB,QAAQ;AACjC,mBAAK,mBAAmB,eAAe,KAAK,QAAQ;AACpD,mBAAK,YAAY,KAAK,mBAAmB,cAAa,GAAG,CAAC;AAC1D,mBAAK,eAAe,IAAI,MAAM,IAAI,MAAM,KAAK,mBAAmB,YAAY;AAG5E,mBAAM,CAAC,KAAK,SAAS,QAAQ,MAAM,WAAW,KAAK,SAAS,QAAQ,MAAM,UAAU,MAAM,KAAK,SAAS,QAAQ,MAAM,YAAY,QAAQ;AACtI,qBAAK,QAAQ,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,cAC9D;AAEA,mBAAK,mBAAmB,SAAS;AAAA,YACrC,OAAO;AACH,mBAAK,mBAAmB,eAAe;AACvC,mBAAK,YAAY,KAAK,mBAAmB,cAAa,GAAG,CAAC;AAC1D,mBAAK,eAAe,IAAI,MAAM,IAAI,MAAM,KAAK,mBAAmB,YAAY;AAC5E,mBAAK,mBAAmB,SAAS;AAAA,YACrC;AAEA,uBAAW,MAAM;AACb,kBAAI,KAAK,cAAc;AACnB,qBAAK,aAAa,UAAU,OAAO,eAAe;AAAA,cACtD;AAAA,YACJ,GAAG,GAAG;AACN,mBAAO;AAAA,UACX;AAEA,eAAK,mBAAmB,iBAAkB,WAAW,KAAK,aAAa,QAAQ,UAAU;AACzF,eAAK,mBAAmB,iBAAiB,WAAW,KAAK,aAAa,QAAQ,UAAU;AAAA,QAC5F,WACS,KAAK,mBAAmB,eAAe,GAAe;AAC3D,eAAK,mBAAmB,yBAAyB,MAAM,QAAQ,GAAG;AAClE,eAAK,mBAAmB,yBAAyB,MAAM,QAAQ,GAAG;AAClE,eAAK,mBAAmB,iBAAiB,WAAW,KAAK,aAAa,QAAQ,UAAU;AACxF,eAAK,mBAAmB,iBAAiB,WAAW,KAAK,aAAa,QAAQ,UAAU;AACxF,eAAK,mBAAmB,gBAAgB,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,0BAA0B;AAC1I,eAAK,mBAAmB,gBAAgB,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,0BAA0B;AAC1I,eAAK,mBAAmB,uBAAuB,KAAK,MAAO,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,2BAA2B,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,2BAA6B,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,2BAA2B,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,uBAAwB;AAAA,QAC1c;AACA,aAAK,mBAAmB,UAAU;AAAA,MACtC;AACA,UAAG,KAAK,mBAAmB;AAAW,eAAO;AAC7C,UAAI,KAAK,mBAAmB;AACxB,aAAK,mBAAmB,YAAY,SAAS,KAAK,SAAS,MAAM,MAAM,MAAM,EAAE;AAAA,MACnF;AACA,WAAK,mBAAmB,YAAY;AACpC,WAAK,mBAAmB,YAAY;AACpC,WAAK,mBAAmB,aAAa;AACrC,WAAK,mBAAmB,aAAa,MAAM,SAAS,MAAM,QAAQ,GAAG;AACrE,WAAK,mBAAmB,cAAc,MAAM,SAAS,MAAM,QAAQ,GAAG;AAEtE,aAAO;AAAA,IACX,CAAC;AAED,SAAK,iBAAiB,KAAK,SAAS,OAAO,CAAC,eAAe,KAAK,gBAAgB,eAAe,KAAK,gBAAgB,eAAe,GAAG,CAAC,UAAU;AAG7I,UAAI,CAAC,KAAK,mBAAmB,WAAW;AACpC,eAAO;AAAA,MACX;AAEA,UAAI,MAAM,SAAS,aAAa;AAC5B,YAAI,KAAK,mBAAmB,YAAY,OAAO;AAC3C,iBAAO;AAAA,QACX;AAEA,aAAK,mBAAmB,iBAAiB,MAAM,QAAQ,GAAG;AAC1D,aAAK,mBAAmB,iBAAiB,MAAM,QAAQ,GAAG;AAC1D,aAAK,mBAAmB,aAAa,MAAM,QAAQ;AACnD,aAAK,mBAAmB;AAExB,YAAI,KAAK,mBAAmB,aAAa,GAAe;AACpD,eAAK,mBAAmB,kBAAkB,MAAM,QAAQ,GAAG;AAC3D,eAAK,mBAAmB,kBAAkB,MAAM,QAAQ,GAAG;AAC3D,eAAK,mBAAmB,sBAAsB,KAAK,MAAO,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,oBAAoB,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,oBAAsB,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,oBAAoB,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,gBAAiB;AAC7Y,cAAI,KAAK,mBAAmB,yBAAyB,MAAM;AACvD,iBAAK,mBAAmB,uBAAuB,KAAK,mBAAmB;AAAA,UAC3E;AAEA,cAAI,KAAK,IAAI,KAAK,mBAAmB,uBAAuB,KAAK,mBAAmB,mBAAmB,KAAK,GAAG;AAE3G,iBAAK,mBAAmB,cAAc,KAAK,OAAO,KAAK,mBAAmB,sBAAsB,KAAK,mBAAmB,uBAAuB,KAAK,mBAAmB,cAAc,GAAG,KAAK,QAAQ,OAAO;AAC5M,iBAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,kBAAkB;AAC7J,iBAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,mBAAmB;AAC/J,iBAAK,mBAAmB,kBAAkB,KAAK,mBAAmB,cAAc,KAAK,mBAAmB;AACxG,iBAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,iBAAiB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAuB,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,iBAAiB,IAAM,KAAK,mBAAmB,mBAAmB,KAAK,mBAAmB,cAAc,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,iBAAkB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AACxlB,iBAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,kBAAkB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAuB,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,kBAAkB,IAAM,KAAK,mBAAmB,mBAAmB,KAAK,mBAAmB,cAAc,KAAK,mBAAmB,mBAAqB,KAAK,mBAAmB,iBAAkB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AAE3lB,iBAAK,eAAe,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,WAAW;AAEnJ,gBAAI,KAAK,mBAAmB,cAAc,GAAG;AACzC,mBAAK,mBAAmB,SAAS;AACjC,mBAAK,CAAC,KAAK,SAAS,QAAQ,MAAM,WAAW,KAAK,SAAS,QAAQ,MAAM,UAAU,MAAM,KAAK,SAAS,QAAQ,MAAM,YAAY,QAAQ;AACrI,qBAAK,QAAQ,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,cAC9D;AAAA,YACJ;AAEA,iBAAK,mBAAmB,uBAAuB,KAAK,mBAAmB;AACvE,iBAAK,mBAAmB,eAAe,KAAK,mBAAmB;AAC/D,iBAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AACjE,iBAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AAAA,UACrE;AAAA,QACJ,OAAO;AACH,eAAK,mBAAmB,cAAc,KAAK,mBAAmB;AAC9D,eAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,kBAAkB;AAC7J,eAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,mBAAmB;AAC/J,eAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,iBAAiB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAkB,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AACjY,eAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,kBAAkB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAkB,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AAEnY,cAAI,KAAK,IAAI,KAAK,mBAAmB,aAAa,MAAM,KAAK,IAAI,KAAK,mBAAmB,YAAY,GAAG;AACpG,iBAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AACjE,iBAAK,mBAAmB,wBAAwB,KAAK,mBAAmB;AAAA,UAC5E;AAEA,cAAI,KAAK,IAAI,KAAK,mBAAmB,aAAa,MAAM,KAAK,IAAI,KAAK,mBAAmB,YAAY,GAAG;AACpG,iBAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AACjE,iBAAK,mBAAmB,wBAAwB,KAAK,mBAAmB;AAAA,UAC5E;AAEA,eAAK,YAAY,KAAK,mBAAmB,cAAc,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,aAAa;AACnI,eAAK,eAAe,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,WAAW;AAAA,QACvJ;AAAA,MACJ;AAGA,UAAI,MAAM,SAAS,eAAe,KAAK,mBAAmB,WAAW;AACnE,YAAG,MAAM,QAAQ;AAAa,iBAAO;AAEnC,cAAM,eAAe;AAEvB,YAAG,KAAK,mBAAmB,YAAY;AAAO,iBAAO;AAErD,aAAK,mBAAmB,iBAAiB,MAAM;AAC/C,aAAK,mBAAmB,iBAAiB,MAAM;AAE/C,aAAK,mBAAmB,cAAc,KAAK,mBAAmB;AAC9D,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,kBAAkB;AAC7J,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,cAAe,KAAK,mBAAmB,mBAAmB;AAC/J,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,WAAW,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,iBAAiB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAkB,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AACjY,aAAK,mBAAmB,gBAAiB,KAAK,mBAAmB,YAAY,KAAK,mBAAmB,eAAgB,KAAK,mBAAmB,kBAAkB,IAAI,KAAK,OAAO,KAAK,mBAAmB,kBAAkB,KAAK,mBAAmB,wBAAwB,KAAK,mBAAmB,iBAAiB,KAAK,mBAAmB,eAAgB,IAAK,KAAK,mBAAmB,YAAY;AAEnY,YAAI,KAAK,IAAI,KAAK,mBAAmB,aAAa,MAAM,KAAK,IAAI,KAAK,mBAAmB,YAAY,GAAG;AACpG,eAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AACjE,eAAK,mBAAmB,wBAAwB,KAAK,mBAAmB;AAAA,QAC5E;AAEA,YAAI,KAAK,IAAI,KAAK,mBAAmB,aAAa,MAAM,KAAK,IAAI,KAAK,mBAAmB,YAAY,GAAG;AACpG,eAAK,mBAAmB,iBAAiB,KAAK,mBAAmB;AACjE,eAAK,mBAAmB,wBAAwB,KAAK,mBAAmB;AAAA,QAC5E;AAEA,aAAK,YAAY,KAAK,mBAAmB,cAAc,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,aAAa;AACnI,aAAK,eAAe,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,gBAAgB,MAAM,KAAK,mBAAmB,WAAW;AAAA,MAErJ;AAEA,UAAI,CAAC,KAAK,mBAAmB,QAAQ;AAEjC,aAAK,mBAAmB,WAAW,MAAM,SAAS,MAAM,QAAQ,GAAG;AACnE,aAAK,mBAAmB,YAAY,MAAM,SAAS,MAAM,QAAQ,GAAG;AACpE,aAAK,mBAAmB,YAAY,KAAK,mBAAmB,aAAa,KAAK,mBAAmB;AACjG,aAAK,mBAAmB,aAAa,KAAK,mBAAmB,cAAc,KAAK,mBAAmB;AACnG,YAAI,KAAK,QAAQ,gBAAgB;AAC7B,eAAK,MAAM,GAAG,CAAC,KAAK,mBAAmB,YAAY,IAAI;AAAA,QAC3D;AAAA,MACJ;AAAA,IAEJ,CAAC;AAGD,SAAK,iBAAiB,KAAK,SAAS,OAAO,CAAC,cAAc,KAAK,gBAAgB,aAAa,KAAK,gBAAgB,iBAAiB,KAAK,gBAAgB,gBAAgB,KAAK,gBAAgB,aAAa,iBAAiB,eAAe,iBAAiB,GAAG,CAAC,UAAU;AAGpQ,UAAI,KAAK,iBAAiB,MAAM,SAAS,YAAY;AACjD,aAAK,mBAAmB,aAAa,MAAM,QAAQ;AACnD,YAAI,KAAK,mBAAmB,eAAe,GAAkB;AAEzD,cAAI,KAAK,cAAc;AACnB,iBAAK,YAAY,KAAK,mBAAmB,cAAc,KAAK,mBAAmB,eAAe,KAAK,mBAAmB,aAAa;AAAA,UACvI;AACA,cAAI,KAAK,mBAAmB,iBAAiB,GAAG;AAC5C,iBAAK,mBAAmB,SAAS;AACjC,gBAAI,KAAK,SAAS,QAAQ,MAAM,YAAY,QAAQ;AAChD,mBAAK,OAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,YAC7D;AAAA,UACJ;AACA,eAAK,mBAAmB,uBAAuB;AAC/C,eAAK,mBAAmB,UAAU;AAAA,QACtC,WAAW,KAAK,mBAAmB,eAAe,GAAsB;AACpE,eAAK,mBAAmB,wBAAwB,MAAM,QAAQ,GAAG;AACjE,eAAK,mBAAmB,wBAAwB,MAAM,QAAQ,GAAG;AAAA,QACrE,WAAW,KAAK,mBAAmB,aAAa,GAAe;AAC3D,eAAK,mBAAmB,uBAAuB;AAAA,QACnD;AAAA,MACJ;AAGA,UAAI,KAAK,mBAAmB,WAAW;AACnC,aAAK,mBAAmB,YAAY;AACpC,YAAI,cAAc;AAClB,YAAI,CAAC,KAAK,QAAQ,MAAM;AACpB,cAAI,KAAK,sBAAsB,KAAK,KAAK,mBAAmB,YAAY,GAAG;AACvE,0BAAc;AAAA,UAClB;AACA,cAAI,KAAK,qBAAqB,KAAK,gBAAgB,SAAS,KAAK,KAAK,mBAAmB,YAAY,GAAG;AACpG,0BAAc;AAAA,UAClB;AAAA,QACJ;AACA,YAAI,KAAK,IAAI,KAAK,mBAAmB,SAAS,IAAI,KAAK,QAAQ,kBAAkB,aAAa;AAC1F,eAAK,UAAU,KAAK,mBAAmB,YAAY,IAAI,IAAI,EAAE;AAAA,QACjE,WACS,KAAK,QAAQ,gBAAgB;AAClC,eAAK,MAAM,KAAK,QAAQ,iBAAiB,KAAM,IAAI,IAAI;AAAA,QAC3D;AAEA,YAAI,KAAK,QAAQ,cAAc,KAAK,IAAI,KAAK,mBAAmB,UAAU,IAAI,MAAM,KAAK,IAAI,KAAK,mBAAmB,SAAS,IAAI,KAAK,QAAQ,gBAAgB;AAC3J,eAAK,MAAM;AAAA,QACf;AAAA,MACJ;AAAA,IACJ,CAAC;AAED,SAAK,iBAAiB,KAAK,SAAS,OAAO,CAAC,UAAU,GAAG,CAAC,UAAU;AAChE,UAAG,KAAK;AAAe;AACvB,WAAK,mBAAmB,wBAAwB,MAAM;AACtD,WAAK,mBAAmB,wBAAwB,MAAM;AACtD,WAAK,mBAAmB,kBAAkB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AAClF,WAAK,mBAAmB,iBAAiB,KAAK,cAAc,KAAK,SAAS,KAAK,EAAE;AACjF,WAAK,mBAAmB,YAAY,KAAK,cAAc,KAAK,YAAY,EAAE;AAC1E,WAAK,mBAAmB,WAAW,KAAK,cAAc,KAAK,YAAY,EAAE;AACzE,WAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAC/D,WAAK,mBAAmB,mBAAmB,KAAK,SAAS,MAAM;AAE/D,WAAK,aAAa,UAAU,IAAI,eAAe;AAE/C,UAAG,CAAC,KAAK,mBAAmB,QAAQ;AAChC,aAAK,mBAAmB,eAAe,KAAK,QAAQ;AACpD,aAAK,YAAY,KAAK,mBAAmB,cAAc,GAAG,CAAC;AAC3D,aAAK,eAAe,IAAI,MAAM,IAAI,MAAM,KAAK,mBAAmB,YAAY;AAC5E,aAAK,CAAC,KAAK,SAAS,QAAQ,MAAM,WAAW,KAAK,SAAS,QAAQ,MAAM,UAAU,MAAM,KAAK,SAAS,QAAQ,MAAM,YAAY,QAAQ;AACrI,eAAK,QAAQ,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,QAC9D;AACA,aAAK,mBAAmB,SAAS;AAAA,MACrC,OAAO;AACH,aAAK,mBAAmB,eAAe;AACvC,aAAK,YAAY,KAAK,mBAAmB,cAAc,GAAG,CAAC;AAC3D,aAAK,eAAe,IAAI,MAAM,IAAI,MAAM,KAAK,mBAAmB,YAAY;AAC5E,aAAK,mBAAmB,SAAS;AACjC,YAAI,KAAK,SAAS,QAAQ,MAAM,YAAY,QAAQ;AAChD,eAAK,OAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,QAC7D;AAAA,MAEJ;AACA,iBAAW,MAAM;AACb,YAAI,KAAK,cAAc;AACnB,eAAK,aAAa,UAAU,OAAO,eAAe;AAClD,eAAK,aAAa,MAAM,KAAK,mBAAmB,sBAAsB;AAAA,QAC1E;AAAA,MACJ,GAAG,GAAG;AAEN,WAAK,mBAAmB,UAAU;AAClC,aAAO;AAAA,IACX,CAAC;AAAA,EAEL;AAAA,EAEA,cAAc,SAAS;AACnB,QAAI,SAAS,OAAO,iBAAiB,OAAO,GACxC,SAAS,QAAQ,cACjB,QAAQ,QAAQ,aAChB,iBAAiB,WAAW,OAAO,cAAc,GACjD,oBAAoB,WAAW,OAAO,iBAAiB,GACvD,aAAa,WAAW,OAAO,UAAU,GACzC,gBAAgB,WAAW,OAAO,aAAa,GAC/C,kBAAkB,WAAW,OAAO,eAAe,GACnD,mBAAmB,WAAW,OAAO,gBAAgB,GACrD,cAAc,WAAW,OAAO,WAAW,GAC3C,eAAe,WAAW,OAAO,YAAY;AACjD,WAAO;AAAA,MACH,QAAQ,SAAS,oBAAoB,iBAAiB,aAAa;AAAA,MACnE,OAAO,QAAQ,kBAAkB,mBAAmB,cAAc;AAAA,IACtE;AAAA,EACJ;AAAA,EAEA,aAAa;AACT,QAAI,UAAU,UAAU,KAAK,oBAAoB,IAC7C,SAAS,OAAO,SAAS,KAAK,MAAM,GAAG,EAAE,KAAK,MAAM;AAExD,SAAK,cAAc;AAEnB,QAAI,KAAK,kBAAkB;AACvB,aAAO,QAAQ,KAAK,oBAAoB,iBAAiB,aAAa,IAAI,SAAS,OAAO,MAAM;AAAA,IACpG,OAAO;AAEH,UAAI,KAAK,mBAAmB;AACxB,eAAO,SAAS,QAAQ,MAAM;AAAA,MAClC,OAAO;AACH,eAAO,SAAS,OAAO;AAAA,MAC3B;AAAA,IACJ;AACA,QAAG,CAAC,KAAK,mBAAmB;AACxB,WAAK,iBAAiB;AAAA,IAC1B;AAEA,SAAK,oBAAoB;AAAA,EAC7B;AAAA,EAEA,YAAY;AACR,SAAK,cAAc;AACnB,QAAG,KAAK,gBAAgB;AACpB,cAAQ,KAAK;AAAA,IACjB,OAAO;AACH,UAAI,KAAK,kBAAkB;AACvB,gBAAQ,UAAU,IAAI,SAAS,OAAO,OAAO,SAAS,WAAW,OAAO,SAAS,MAAM;AAAA,MAC3F,OAAO;AACH,eAAO,SAAS,OAAO;AAAA,MAC3B;AAAA,IACJ;AAGA,iBAAa,KAAK,oBAAoB;AAAA,EAC1C;AAAA,EAEA,YAAY;AACR,iBAAa,KAAK,oBAAoB;AACtC,QAAI,CAAC,KAAK,mBAAmB;AACzB,WAAK,WAAW;AAAA,IACpB,OAAO;AACH,WAAK,uBAAuB,WAAW,KAAK,WAAW,KAAK,IAAI,GAAG,GAAG;AAAA,IAC1E;AAAA,EACJ;AAAA,EAEA,WAAW,aAAa,YAAY,WAAW;AAC3C,QAAI,KAAK,QAAQ,YAAY,eAAe,gBAAgB,MAAM,OAAO,gBAAgB,aAAa;AAElG,YAAM,WAAY,aAAa,KAAK,QAAQ,eAAgB,OAAO,cAAc;AAEjF,WAAK,KAAK,KAAK,SAAS,OAAO;AAC/B,WAAK,SAAS,QAAQ,MAAM,QAAQ,aAAa;AACjD,WAAK,SAAS,QAAQ,YAAY;AAElC,WAAK,SAAS,MAAM,YAAY,KAAK,SAAS,OAAO;AAErD,iBAAW,MAAM;AACb,aAAK,OAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AAAA,MAC7D,GAAG,KAAK,QAAQ,YAAY;AAAA,IAChC;AAAA,EACJ;AAAA,EAEA,MAAM,OAAO,KAAK;AACd,QAAI,CAAC,KAAK,mBAAmB;AACzB,aAAO,KAAK,SAAS,MAAM,MAAM,OAAO;AAAA,IAC5C;AAEA,SAAK,SAAS,MAAM,MAAM,KAAK,mBAAmB,eAAe,gBAAgB,MAAM;AACvF,SAAK,SAAS,MAAM,MAAM,KAAK,mBAAmB,gBAAgB,KAAK,mBAAmB,eAAe,QAAQ;AAAA,EACrH;AAAA,EAEA,WAAW,KAAK;AACZ,QAAI;AACJ,QAAI,OAAO,QAAQ,SAAS,QAAQ,YAAY;AAC5C,cAAQ,MAAM,KAAK,KAAK,QAAQ,EAAE,OAAO,aAAW,QAAQ,aAAa,KAAK,MAAM,GAAG;AAAA,IAC3F,OAAO;AACH,cAAQ,KAAK;AAAA,IACjB;AACA,WAAO;AAAA,EACX;AAAA,EAEA,UAAU,SAAS;AACf,YAAQ,cAAc,IAAI,MAAM,UAAU,KAAK,cAAc,CAAC;AAE9D,SAAK,uBAAuB,KAAK,kBAAkB;AACnD,QAAI,KAAK,QAAQ,eAAe;AAC5B,WAAK,gBAAgB,MAAM;AAC3B,WAAK,uBAAuB;AAAA,IAChC;AAEA,QAAI,KAAK,QAAQ,aAAa,KAAK,QAAQ,cAAc,IAAI;AACzD,eAAS,cAAc,MAAM,EAAE,UAAU,IAAI,KAAK,QAAQ,SAAS;AAAA,IACvE;AAEA,aAAS,KAAK,YAAY,KAAK,SAAS,OAAO;AAE/C,SAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,KAAK;AACrD,QAAI,KAAK,QAAQ,SAAS;AACtB,eAAS,KAAK,YAAY,KAAK,SAAS,OAAO;AAAA,IACnD;AAEA,SAAK,kBAAkB,KAAK,WAAW,QAAQ,GAAG;AAElD,QAAI,KAAK,QAAQ,aAAa;AAC1B,UAAI,KAAK,gBAAgB,UAAU,KAAK,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,OAAO,GAAG;AAC3F,aAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,OAAO;AAAA,MAC3D,WAAU,KAAK,gBAAgB,SAAS,KAAK,CAAC,KAAK,SAAS,QAAQ,SAAS,KAAK,SAAS,OAAO,GAAG;AACjG,aAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,OAAO;AAAA,MAC3D;AAAA,IACJ;AAEA,QAAI,KAAK,QAAQ,YAAY,KAAK,SAAS,UAAU;AACjD,WAAK,SAAS,QAAQ,YAAY,KAAK,SAAS,QAAQ;AAAA,IAC5D;AAEA,SAAK,cAAc;AAEnB,SAAK,oBAAoB,KAAK,gBAAgB,QAAQ,OAAO;AAE7D,QAAI,YAAY,QAAQ,aAAa,KAAK,QAAQ,UAAU;AAE5D,SAAK,eAAe,SAAS,cAAc,KAAK;AAChD,SAAK,aAAa,MAAM,UAAU;AAClC,SAAK,aAAa,aAAa,OAAO,SAAS;AAC/C,SAAK,aAAa,QAAQ,QAAQ;AAClC,SAAK,aAAa,QAAQ,aAAa;AACvC,SAAK,aAAa,QAAQ,aAAa;AAEvC,QAAI,KAAK,aAAa,QAAQ,SAAS,MAAM,IAAI;AAC7C,WAAK,aAAa,KAAK,SAAS;AAAA,IACpC;AAEA,SAAK,SAAS,MAAM,YAAY;AAChC,SAAK,SAAS,MAAM,aAAa,SAAS,EAAE;AAE5C,SAAK,SAAS,MAAM,YAAY,KAAK,YAAY;AAGjD,SAAK,OAAO,KAAK,SAAS,SAAS,KAAK,QAAQ,SAAS;AACzD,SAAK,OAAO,CAAC,KAAK,SAAS,SAAS,KAAK,SAAS,YAAY,KAAK,SAAS,aAAa,KAAK,SAAS,QAAQ,GAAG,KAAK,QAAQ,SAAS;AAExI,SAAK,KAAK,KAAK,SAAS,OAAO;AAC/B,SAAK,SAAS,QAAQ,cAAc,aAAa,EAAE,YAAY,KAAK,oBAAoB;AACxF,SAAK,SAAS,QAAQ,cAAc,WAAW,EAAE,YAAY,KAAK,gBAAgB;AAElF,SAAK,YAAY;AACjB,QAAI,KAAK,QAAQ,YAAY;AACzB,WAAK,QAAQ;AAAA,IACjB;AAEA,eAAW,MAAM;AACb,cAAQ,cAAc,IAAI,MAAM,WAAW,KAAK,cAAc,CAAC;AAAA,IACnE,GAAG,KAAK,QAAQ,cAAc;AAAA,EAClC;AAAA,EAEA,aAAa;AACT,SAAK,oBAAoB,UAAU,aAAa,KAAK,cAAc;AACnE,SAAK,iBAAiB,UAAU,aAAa,KAAK,gBAAgB,WAAS;AACvE,UAAI,aAAa,MAAM,UACnB,KAAK,SAAS,YAAY,MAAM,UAChC,CAAC,KAAK,SAAS,QAAQ,SAAS,MAAM,MAAM,GAAG;AAC/C,aAAK,SAAS,QAAQ,MAAM;AAAA,MAChC;AAAA,IACJ,CAAC;AAAA,EACL;AAAA,EAGA,iBAAiB,UAAU,QAAQ,UAAU,MAAM;AAC/C,eAAW,KAAK,KAAK,QAAQ;AAC7B,aAAS,KAAK,KAAK,MAAM;AAEzB,aAAS,WAAW,UAAU;AAC1B,UAAI,CAAC,QAAQ,YAAY;AACrB,gBAAQ,aAAa,CAAC;AAAA,MAC1B;AAEA,eAAS,SAAS,QAAQ;AACtB,YAAI,UAAU,QAAQ;AACtB,YAAI,kBAAkB,CAAC,cAAc,aAAY,cAAa,gBAAgB,EAAE,QAAQ,MAAM,MAAM,GAAG,EAAE,EAAE,KAAK;AAChH,YAAI,mBAAmB,KAAK,0BAA0B;AAClD,cAAI,OAAO,YAAY,UAAU;AAC7B,oBAAQ,UAAU;AAAA,UACtB,OAAO;AACH,sBAAU,EAAC,SAAS,KAAI;AAAA,UAC5B;AAAA,QACJ;AAEA,gBAAQ,WAAW,SAAS;AAC5B,gBAAQ,iBAAiB,MAAM,MAAM,GAAG,EAAE,IAAI,UAAU,OAAO;AAAA,MACnE;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,oBAAoB,UAAU,QAAQ;AAClC,eAAW,KAAK,KAAK,QAAQ;AAC7B,aAAS,KAAK,KAAK,MAAM;AACzB,aAAS,WAAW,UAAU;AAC1B,eAAS,SAAS,QAAQ;AACtB,YAAG,QAAQ,cAAc,QAAQ,WAAW,QAAQ;AAChD,kBAAQ,oBAAoB,MAAM,MAAM,GAAG,EAAE,IAAI,QAAQ,WAAW,MAAM;AAC1E,iBAAO,QAAQ,WAAW;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,QAAQ,UAAU,UAAU,UAAU;AAClC,eAAW,KAAK,KAAK,QAAQ;AAC7B,aAAS,WAAW,UAAU;AAC1B,cAAQ,MAAM,UAAU,WAAW,OAAO,KAAK,OAAO,iBAAiB,OAAO,EAAE,iBAAiB,SAAS;AAAA,IAC9G;AAEA,SAAK,WAAW;AAEhB,QAAI,OAAO,YAAY,YAAY,KAAK,QAAQ,YAC5C,OAAO,MAAM;AACT,UAAI,iBAAiB,WAAW,SAAS,GAAG,MAAM,OAAO;AACzD,WAAK,kBAAkB,QAAQ,GAAG;AAC9B,iBAAS,WAAW,UAAU;AAC1B,kBAAQ,MAAM,UAAU;AAExB,kBAAQ,MAAM,UAAU;AAAA,QAC5B;AACA,oBAAY,SAAS,KAAK,MAAM,QAAQ;AAAA,MAC5C,OAAO;AACH,iBAAS,WAAW,UAAU;AAC1B,kBAAQ,MAAM,UAAU;AAAA,QAC5B;AACA,8BAAsB,IAAI;AAAA,MAC9B;AAAA,IACJ;AAEJ,SAAK;AAAA,EACT;AAAA,EAEA,OAAO,UAAU,UAAU,UAAU,SAAS;AAC1C,eAAW,KAAK,KAAK,QAAQ;AAC7B,aAAS,WAAW,UAAU;AAC1B,UAAG,SAAS;AACR,gBAAQ,MAAM,UAAU;AACxB,gBAAQ,MAAM,UAAU,WAAW;AAAA,MACvC;AAAA,IACJ;AAEA,SAAK,WAAW;AAEhB,QAAI,gBAAgB,WAAW,SAAS,GAAG,QAAQ,iBAAiB,CAAC,GACjE,OAAQ,WAAW,iBAAkB,YAAY,KAAK,QAAQ,YAC9D,OAAO,MAAM;AACT,UAAI,iBAAiB,WAAW,SAAS,GAAG,MAAM,OAAO;AACzD,UAAI,GAAG,kBAAkB,QAAQ,gBAAgB;AAC7C,iBAAS,WAAW,UAAU;AAC1B,cAAG,SAAS;AACR,oBAAQ,MAAM,UAAU;AAAA,UAC5B;AAAA,QACJ;AACA,YAAG,CAAC,KAAK;AAAU;AACnB,8BAAsB,IAAI;AAAA,MAC9B,OAAO;AACH,iBAAS,WAAW,UAAU;AAC1B,cAAG,SAAS;AACR,oBAAQ,MAAM,UAAU;AAAA,UAC5B;AAAA,QACJ;AACA,oBAAY,SAAS,KAAK,MAAM,QAAQ;AAAA,MAC5C;AAAA,IACJ;AAEJ,SAAK;AAAA,EACT;AAAA,EAEA,KAAK,UAAU;AACX,eAAW,KAAK,KAAK,QAAQ;AAC7B,aAAS,WAAW,UAAU;AAC1B,UAAG,QAAQ,MAAM,WAAW,QAAQ;AAChC,gBAAQ,QAAQ,iBAAiB,QAAQ,MAAM;AAAA,MACnD;AACA,cAAQ,MAAM,UAAU;AAAA,IAC5B;AAAA,EACJ;AAAA,EAEA,KAAK,UAAU,SAAS;AACpB,eAAW,KAAK,KAAK,QAAQ;AAC7B,aAAS,WAAW,UAAU;AAC1B,cAAQ,MAAM,UAAU,QAAQ,QAAQ,kBAAkB,WAAW;AAAA,IACzE;AAAA,EACJ;AAAA,EAEA,KAAK,OAAO;AACR,WAAO,OAAO,MAAM,OAAO,cAAc,cAAc,OAAO,UAAU,WAAW,QAAQ,CAAC,KAAK;AAAA,EACrG;AAAA,EAEA,GAAG,QAAQ,UAAU;AACjB,aAAS,KAAK,KAAK,MAAM;AACzB,aAAS,WAAW,KAAK,UAAU;AAC/B,UAAI,CAAC,QAAQ,uBAAuB;AAChC,gBAAQ,wBAAwB,CAAC;AAAA,MACrC;AACA,eAAS,SAAS,QAAQ;AACtB,gBAAQ,sBAAsB,SAAS;AACvC,gBAAQ,iBAAiB,OAAO,QAAQ;AAAA,MAC5C;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EAEA,IAAI,QAAQ;AACR,aAAS,KAAK,KAAK,MAAM;AACzB,aAAS,WAAW,KAAK,UAAU;AAC/B,eAAS,SAAS,QAAQ;AACtB,YAAI,OAAO,QAAQ,0BAA0B,eAAe,SAAS,QAAQ,uBAAuB;AAChG,kBAAQ,oBAAoB,OAAO,QAAQ,sBAAsB,MAAM;AAAA,QAC3E;AAAA,MACJ;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EAIA,KAAK,MAAM,WAAW,GAAG;AACrB,WAAO,QAAQ,KAAK,SAAS;AAC7B,QAAG,OAAO,WAAW,eAAe,gBAAgB,QAAQ;AACxD,aAAO,KAAK,IAAI,CAAC;AAAA,IACrB;AACA,QAAG,WAAW,GAAG;AACb,aAAO,KAAK,SAAS;AAAA,IACzB;AACA,SAAK,oBAAoB,KAAK,SAAS,QAAQ,IAAI;AACnD,QAAG,KAAK,oBAAoB,IAAI;AAC5B,WAAK,UAAU,IAAI;AAAA,IACvB;AAAA,EACJ;AAAA,EAEA,aAAa,UAAU;AACnB,QAAI,OAAO,KAAK,SAAS;AACzB,SAAK,KAAK,MAAM,QAAQ;AAAA,EAC5B;AAAA,EACA,OAAO;AACH,SAAK,UAAU,CAAC;AAAA,EACpB;AAAA,EAEA,OAAO;AACH,SAAK,UAAU,EAAE;AAAA,EACrB;AAAA,EAGA,iBAAiB;AACb,WAAO;AAAA,MACH,mBAAmB,KAAK;AAAA,MACxB,cAAc,KAAK;AAAA,MACnB,sBAAsB,KAAK;AAAA,IAC/B;AAAA,EACJ;AAAA,EAIA,UAAU;AAEN,SAAK,IAAI;AAAA,MACL,WAAW,KAAK;AAAA,MAChB,YAAY,KAAK;AAAA,MACjB,qBAAqB,KAAK;AAAA,MAC1B,qBAAqB,KAAK;AAAA,MAC1B,YAAY,KAAK;AAAA,MACjB,cAAc,KAAK;AAAA,MACnB,cAAc,KAAK;AAAA,MACnB,WAAW,KAAK;AAAA,MAChB,aAAa,KAAK;AAAA,MAClB,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,UAAU,KAAK;AAAA,MACf,WAAW,KAAK;AAAA,IACpB,CAAC;AAED,SAAK,oBAAoB,KAAK,UAAU,WAAW,KAAK,cAAc;AACtE,SAAK,oBAAoB,UAAU,aAAa,KAAK,cAAc;AACnE,SAAK,oBAAoB,SAAS,MAAM,iBAAiB,KAAK,cAAc;AAC5E,SAAK,oBAAoB,SAAS,MAAM,WAAW,KAAK,cAAc;AAEtE,SAAK,oBAAoB,KAAK,SAAS,WAAW,qBAAqB,QAAQ,GAAG,WAAW,KAAK,cAAc;AAChH,SAAK,oBAAoB,KAAK,SAAS,aAAa,WAAW,KAAK,cAAc;AAClF,SAAK,oBAAoB,QAAQ,YAAY,KAAK,cAAc;AAChE,SAAK,oBAAoB,QAAQ,gBAAgB,KAAK,cAAc;AAEpE,SAAK,MAAM;AACX,QAAI,KAAK,QAAQ;AACb,eAAS,KAAK,YAAY,KAAK,SAAS,OAAO;AAC/C,eAAS,KAAK,YAAY,KAAK,SAAS,OAAO;AAAA,IACnD;AAEA,SAAK,WAAW;AAAA,EACpB;AAAA,EAEA,UAAU;AACN,QAAI,CAAC,KAAK,iBAAiB;AACvB,YAAM;AAAA,IACV;AAEA,QAAI,UAAU,KAAK,SACf,WAAW,KAAK;AAEpB,SAAK,QAAQ;AAEb,SAAK,YAAY,UAAU,OAAO;AAElC,WAAO;AAAA,EACX;AACJ;AACA,IAAO,8BAAQ;AAEf,OAAO,iBAAiB;",
  "names": []
}
